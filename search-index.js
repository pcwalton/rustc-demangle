var searchIndex = JSON.parse('{\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[["str",15]],["demangle",3]]],[3,"TryDemangleError","","Error returned from the <code>try_demangle</code> function below when …",null,null],[5,"try_demangle","","The same as <code>demangle</code>, except return an <code>Err</code> if the string …",null,[[["str",15]],[["demangle",3],["trydemangleerror",3],["result",4]]]],[11,"as_str","","Returns the underlying string that\'s being demangled.",0,[[],["str",15]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",1,[[],["trydemangleerror",3]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);